# project-c/charts/demo-app/values.yaml
# —— Chart Parameters ——
replicaCount: 1

namespace: project-c

serviceAccount:
  create: false
  name: ""

# —— Image settings ——
image:
  repository: demo-app
  tag: "v2"
  pullPolicy: IfNotPresent

# —— Service config ——
service:
  type: ClusterIP  # changeable to NodePort or LoadBalancer via values
  port: 8080

# Ingress 
ingress:
  enabled: true
  # Using k3s's built‑in Traefik, with host demo.local
  hosts:
    - host: demo.local
      paths:
        - path: /
          pathType: Prefix

# —— Resource Requests & Limits ——
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 250m
    memory: 256Mi

# —— Autoscaling Stub (disabled by default) ——
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 75

config:
  appName: DemoApp
  logLevel: info

secret:
  dbPassword: securepassword
  apiToken: secrettoken

useSealedSecrets: true

global:
  security:
    allowInsecureImages: true
    
persistence:
  enabled: true
  storageClassName: "local-path"
  accessModes:
    - ReadWriteOnce
  size: 10Gi

prometheusRule:
  enabled: true

prometheus:
  ingress:
    enabled: true
    host: prometheus.local
    serviceName: prometheus-kube-prometheus-prometheus
    servicePort: 9090
    annotations: {}

grafanaIngress:
  enabled: true
  host: grafana.local
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    
grafana:
  dashboardFilenames:
    - original-dashboard.json
    - demo-app-dashboard.json

sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    folder: /opt/bitnami/grafana/provisioning/dashboards/custom

serviceMonitor:
  enabled: true
  namespace: monitoring
  releaseLabel: prometheus
  matchLabels:
    app: demo-app
  targetNamespace: project-c
  port: http
  path: /metrics
  interval: 15s

